version: '3'

services:
    app:
        build:
            context: .
            dockerfile: Dockerfile
        container_name: app-analytics-admin
        restart: unless-stopped
        user: root
        volumes:
            - .:/var/www/html
            - ./docker/php/conf.d/xdebug.ini:/usr/local/etc/php/conf.d/docker-php-ext-xdebug.ini
            - ./docker/php/conf.d/error_reporting.ini:/usr/local/etc/php/conf.d/error_reporting.ini
        networks:
            - app_network
        environment:
            PHP_IDE_CONFIG: "serverName=Docker"
        ports:
            - "9000:9000"
        extra_hosts:
            - "host.docker.internal:host-gateway"

    # use a local database
    db:
        image: postgres:13
        container_name: db-analytics-admin
        restart: unless-stopped
        environment:
            PGPASSWORD: '${DB_PASSWORD:-secret}'
            POSTGRES_DB: '${DB_DATABASE}'
            POSTGRES_USER: '${DB_USERNAME}'
            POSTGRES_PASSWORD: '${DB_PASSWORD:-secret}'
        ports:
            - "5433:5432"
        volumes:
            - dbdata:/var/lib/postgresql/data
        networks:
            - app_network
        healthcheck:
            test:
                - CMD
                - pg_isready
                - '-q'
                - '-d'
                - '${DB_DATABASE}'
                - '-U'
                - '${DB_USERNAME}'
            retries: 3
            timeout: 5s

    nginx:
        build:
            context: ./nginx
            dockerfile: Dockerfile
        container_name: nginx-analytics-admin
        restart: unless-stopped
        ports:
            - "8080:80"   # Use a different host port, like 8080, for example
            - "8443:443"  # Use a different host port, like 8443, for example
        volumes:
            - ./nginx/conf.d:/etc/nginx/conf.d
            - ./public:/var/www/html/public
            - ./storage/app/public:/var/www/html/storage/app/public
        depends_on:
            - app
        networks:
            - app_network

    mysql: # docker-compose exec db bash =>  mysql -u root -p => show databases;
        image: mysql:latest
        restart: always
        volumes:
            - ./tmp/db:/var/lib/mysql
        environment:
            MYSQL_ROOT_PASSWORD: 'root'
            MYSQL_USER: 'laravel'
            MYSQL_PASSWORD: 'laravel'
        ports:
            - "3307:3306"
        logging:
            driver: 'json-file'
            options:
                max-size: '10m'
                max-file: '10'
        container_name: dumpmysql
        networks:
            - app_network


volumes:
    dbdata:

networks:
    app_network:
        driver: bridge


stages:
  - prepare
  - compile
  - deploy

variables:
  DOCKER_IMAGE: $REGISTRY_USER/$REPOSITORY_NAME:latest
  ENVIRONMENT: $CI_COMMIT_REF_NAME
  DOCKER_DRIVER: overlay

services:
  - docker:dind

codestyle:
  stage: prepare
  before_script:
    - composer require laravel/pint --dev
  cache:
    key: ${CI_COMMIT_REF_SLUG}-composer-pint
    paths:
      - vendor/
  script:
    - composer pint-test

phpstan:
  stage: prepare
  before_script:
    - composer require larastan/larastan:^2.0 --dev --no-plugins --no-interaction --no-scripts --prefer-dist --ignore-platform-reqs
  cache:
    key: ${CI_COMMIT_REF_SLUG}-composer-larastan
    paths:
      - vendor/
  script: composer phpstan
  allow_failure: true
  needs:
    - job: codestyle

test:
  stage: prepare
  script:
    - composer install --no-interaction
    - echo "$DOT_ENV" > .env
    - php artisan migrate:fresh --seed
    - php artisan ciphersweet:encrypt App\\Models\\User d13164961cbcd1d75b102e54d8b751881bba4e57d32c13225f5ccd02d91068af
    - php artisan test --coverage
  cache:
    key: ${CI_COMMIT_REF_SLUG}-php-unit
    paths:
      - vendor/
  needs:
    - job: phpstan
  environment:
    name: 'testing'

build:
  stage: compile
  script:
    # Pull the latest code from the repository
    - git checkout "$ENVIRONMENT"
    - git pull
    - npm install
    - npm run build
    - docker login -u $REGISTRY_USER -p $REGISTRY_PASSWORD
    - docker build -t $DOCKER_IMAGE -f Dockerfile .

    # Change permissions for storage and bootstrap directories
    - chmod -R 777 storage bootstrap
  needs:
    - job: test
  only:
    - dev
    - stage
    - main
push:
  stage: compile
  script:
    - docker login -u $REGISTRY_USER -p $REGISTRY_PASSWORD
    - docker push $DOCKER_IMAGE
  needs:
    - job: build
  only:
    - dev
    - stage
    - main

deploy-dev:
  stage: deploy
  script:
    - echo "$DOT_ENV" > "$APP_DIR"/.env
    - cd $APP_DIR && git pull
    - bash deploy.sh # runner the same as dev server
  only:
    - dev
  needs:
    - job: push
  environment:
    name: $CI_COMMIT_REF_SLUG

deploy-stage:
  stage: deploy
  script:
    - echo "$DOT_ENV" > .env
    - scp -r .env $USER@$HOST_STAGE:$APP_DIR
    - ssh $USER@$HOST_STAGE "cd $APP_DIR && git pull"
    - ssh $USER@$HOST_STAGE "bash -s" < deploy.sh "$REGISTRY_USER" "$REPOSITORY_NAME" "$APP_DIR" "$REGISTRY_PASSWORD" "$ENVIRONMENT"
  needs:
    - job: push
  only:
    - stage
  environment:
    name: $CI_COMMIT_REF_SLUG

deploy-master:
  stage: deploy
  script:
    - echo "$DOT_ENV" > .env
    - scp -r .env $USER@$HOST_PROD:$APP_DIR
    - ssh $USER@$HOST_PROD "cd $APP_DIR && git pull"
    - ssh $USER@$HOST_PROD "bash -s" < deploy.sh "$REGISTRY_USER" "$REPOSITORY_NAME" "$APP_DIR" "$REGISTRY_PASSWORD" "$ENVIRONMENT"
  needs:
    - job: push
  only:
    - main
  environment:
    name: $CI_COMMIT_REF_SLUG
